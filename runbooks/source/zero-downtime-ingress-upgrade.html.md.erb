---
title: Zero-downtime Ingress Controller Upgrade
weight: 250
last_reviewed_on: 2020-10-22
review_in: 3 months
---

# <%= current_page.data.title %>

This is a placeholder based on the notes in this [github issue].  Please revise
it and add details (e.g. code snippets for the route53 changes) when we go
through this process for real.

This procedure should enable upgrading the ingress controller used by a
particular ingress without incurring downtime due to traffic being sent to the
(old, no-longer-existing) ingress because of cached DNS entries on the user's
computer.

[Procedure][process] followed, while migrating ingress to default controller

## Procedure

1) Create a 2nd ingress-controller
We have a [fallback ingress-controller module][fall-back-ic] to create this ingress-controller

2) Use that ingress controller class and create a new ingress

```
kubectl -n my-namespace get ingresses ingress-main -o yaml --export > ingress-second.yaml
```

Edit "ingress-second.yaml" to update name and ingress.class annotation 

```
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-main to <ingress-second>
  namespace: my-namespace
  annotations:
    kubernetes.io/ingress.class: "nginx" to <new-ingress-controller-class>
```
Apply the ingress-second.yaml 

```
kubectl -n my-namespace apply -f ingress-second.yaml
```

3) In route53 identify the A and txt record, update the txt record with the new ingress name

![Route53 TXT Record](../images/route53-txt-record.png)

```
TXT record explination:
external-dns/owner=vv-test-db (clustername)
external-dns/resource=ingress/my-namespace/ingress-second(namespace/ingress name)
```

4) external-dns will trigger and update the A record with the NLB belonging to the 2nd ingress-controller

We can look at the logs in the external-dns

```
kubectl -n kube-system logs external-dns-xxxxxxx -f

level=info msg="Desired change: UPSERT helloworld.apps.vv-test-db.cloud-platform.service.justice.gov.uk A [Id: /hostedzone/Z0644190RYO6REHLM1RP]"
level=info msg="Desired change: UPSERT _external_dns.helloworld.apps.vv-test-db.cloud-platform.service.justice.gov.uk TXT [Id: /hostedzone/Z0644190RYO6REHLM1RP]"
level=info msg="2 record(s) in zone vv-test-db.cloud-platform.service.justice.gov.uk. [Id: /hostedzone/Z0644190RYO6REHLM1RP] were successfully updated"
```

5) Traffic will be routed to the new NLB (but traffic arriving via the old NLB will still be handled correctly)

6) Wait for however long the DNS TTL is (plus a bit, for safety). All traffic should now be routed through the new NLB

7) Upgrade (or make other required changes to) the old ingress-controller

8) Switch traffic back by updating the route53 txt record with the original ingress name

9) external-dns will trigger and update the A record with the NLB belonging to the original ingress-controller

10) Wait for however long the DNS TTL is (plus a bit, for safety). All traffic should now be routed through the original NLB

11) Delete the new ingress you created

[github issue]: https://github.com/ministryofjustice/cloud-platform/issues/2301
[fall-back-ic]: https://github.com/ministryofjustice/cloud-platform-terraform-k8s-ingress-controller
[process]: https://docs.google.com/document/d/1hZzBkXB7_K0_NfYHX6enXFwp79MdHk_zRPYR3j9gVGk