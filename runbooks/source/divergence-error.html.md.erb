---
title: How to Investigate Divergence Errors
weight: 210
last_reviewed_on: 2022-08-10
review_in: 3 months
---

# <%= current_page.data.title %>

The [divergence pipelines] alert us if the state of the cluster does not match the source code in our git repositories.

Usually, the pipeline failure will include the `terraform plan` output that explains exactly what has diverged.

## Reproduce the plan

To run the same `terraform plan` command as the pipeline does:

* Ensure you have the following environment variables set:
    * `AWS_ACCESS_KEY_ID`
    * `AWS_SECRET_ACCESS_KEY`
* Start in a working copy of the [cloud-platform-infrastructure] repo
* `cd` into the directory matching the pipeline which is failing:

| Pipeline | Directory |
| - | - |
| divergence-kops |terraform/cloud-platform |
| divergence-k8s-components | terraform/cloud-platform-components |
| divergence-eks | terraform/cloud-platform-eks |
| divergence-eks-components | terraform/cloud-platform-eks/components |
| divergence-networking | terraform/cloud-platform-network |

* Check you're using the correct terraform workspace (e.g. `terraform workspace select live`)
* Check you're targeting the correct kubernetes cluster, by running `kubectl cluster-info`
* Run the terraform plan

```bash
terraform init
terraform plan
```

You should see the same differences as reported in the divergence pipeline.

[divergence pipelines]: https://concourse.cloud-platform.service.justice.gov.uk/teams/main/pipelines/divergence
[cloud-platform-infrastructure]: https://github.com/ministryofjustice/cloud-platform-infrastructure
